package techquizapp.gui;

import java.awt.Font;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.CANCEL_OPTION;
import static javax.swing.JOptionPane.CLOSED_OPTION;
import techquizapp.dao.QuestionDAO;
import techquizapp.pojo.Exam;
import techquizapp.pojo.Questions;
import techquizapp.pojo.QuestionsStore;
import techquizapp.pojo.UserProfile;

public class EditQuestionsFrame extends javax.swing.JFrame {

    private Exam editExam;
    private QuestionsStore qStore;
    private HashMap<String,String> options;
    private String question, option1, option2, option3, option4, correctOption;
    int pos ,qno;

   
    public EditQuestionsFrame() 
    {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    EditQuestionsFrame(Exam editExam) throws SQLException 
    {
       this();
       this.editExam = editExam;
       lblUserName.setText("Hello "+ UserProfile.getUserName());
        
       qStore = new QuestionsStore();
       
       //---test code starts-------------------------------------------------------------
       /*try
       {
           ArrayList<Questions> questions = QuestionDAO.getQuestionByExam("EX9");
           for(Questions q: questions )
        {
            String que = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",q.getQuesNo(),q.getExamID(),q.getLanguage(),q.getQuestion(),
                                q.getAnswer1(),q.getAnswer2(),q.getAnswer3(),q.getAnswer4(),"correctAnswer: ",q.getCorrectAnswer());
            System.out.println(que);
        }
       }
       catch(SQLException e)
       {
           System.out.println("SQL Error in test code");
       }
       */
       //---test code ends---------------------------------------------------------------
       options = new HashMap<>();
       options.put("Option 1","Answer1");
       options.put("Option 2","Answer2");
       options.put("Option 3","Answer3");
       options.put("Option 4","Answer4");
       
       pos = 0;
       qno = 1;
       
      // lblQno.setText("Question no "+qno);
       lblTitle.setText("EDITING " + editExam.getLanguage().toUpperCase() +" PAPER");
       loadQuestions();
       showQuestions();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        txtOption1 = new javax.swing.JTextField();
        txtOption2 = new javax.swing.JTextField();
        txtOption3 = new javax.swing.JTextField();
        txtOption4 = new javax.swing.JTextField();
        jcCorrectOption = new javax.swing.JComboBox<>();
        btnPrevious = new javax.swing.JButton();
        lblUserName = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 102, 51));
        jLabel4.setText("Option 2:");

        lblTitle.setBackground(new java.awt.Color(0, 0, 0));
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 102, 0));

        lblQno.setBackground(new java.awt.Color(0, 0, 0));
        lblQno.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblQno.setForeground(new java.awt.Color(255, 102, 51));
        lblQno.setText("Question no. ");

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 51));
        jLabel3.setText("Option 1:");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 51));
        jLabel5.setText("Option 3:");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 51));
        jLabel6.setText("Option 4:");

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 51));
        jLabel7.setText("Correct Answer");

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/techquizapp/gui/images/questionpaper4.jpg"))); // NOI18N

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 102, 51));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 102, 51));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 102, 51));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        jcCorrectOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Option 1", "Option 2", "Option 3", "Option 4" }));

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 102, 51));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblUserName.setBackground(new java.awt.Color(0, 0, 0));
        lblUserName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 102, 0));

        lblLogout.setBackground(new java.awt.Color(0, 0, 0));
        lblLogout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 102, 0));
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtOption4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtOption3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(txtOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addGap(107, 107, 107))
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPrevious)
                                        .addGap(33, 33, 33)))
                                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jcCorrectOption, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnDone, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanelLayout.createSequentialGroup()
                                        .addGap(128, 128, 128)
                                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtOption2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel4))))))
                        .addGap(1, 1, 1)))
                .addGap(0, 100, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154)
                .addComponent(lblLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(311, 311, 311))
        );

        jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtOption1, txtOption2, txtOption3, txtOption4});

        jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnDone, btnNext, btnPrevious});

        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogout, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOption2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOption3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOption4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jcCorrectOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNext)
                            .addComponent(btnCancel)
                            .addComponent(btnDone)
                            .addComponent(btnPrevious)))
                    .addComponent(lblQno))
                .addGap(0, 56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
       this.dispose();
       LoginScreenFrame loginScreen = new LoginScreenFrame();
       loginScreen.setVisible(true);
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
       Font f = new Font("Tahoma", Font.BOLD,18);
       lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        Font f = new Font("Tahoma", Font.BOLD,13);
        lblLogout.setFont(f);
    }//GEN-LAST:event_lblLogoutMouseExited

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
       
        
        if(validateInput() == false)
        {
            JOptionPane.showMessageDialog(null,"Fill all fields ","Error!!",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
       // System.out.println("Created question: " + qno);
        Questions ques = createQuestion();
        
       // String quest = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",ques.getQuesNo(),ques.getExamID(),ques.getLanguage(),ques.getQuestion(),
        //                        ques.getAnswer1(),ques.getAnswer2(),ques.getAnswer3(),ques.getAnswer4(),"correctAnswer: ",ques.getCorrectAnswer());
         //   System.out.println(quest);
       
        //if(pos <= editExam.getTotalQuestions() - 1)
        //{      
                qStore.removeQuestion(pos);
                qStore.setQuestionAt(pos,ques);
                
                System.out.println("At Position: " + pos);
                Questions quest = qStore.getQuestion(pos);
                String test = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",ques.getQuesNo(),ques.getExamID(),ques.getLanguage(),ques.getQuestion(),
                                ques.getAnswer1(),ques.getAnswer2(),ques.getAnswer3(),ques.getAnswer4(),"correctAnswer: ",ques.getCorrectAnswer());
                System.out.println(test);
        
        pos++;
        if(pos >= qStore.getCount())
        {
            int ans = JOptionPane.showConfirmDialog(null, "Your question set has been successfully updated.\nPress the DONE button to add it to the database ","Exam Added!",JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
          //  if(ans == CANCEL_OPTION || ans == CLOSED_OPTION)
           // {
            //    pos--;
             //   return;
            //}
                
            btnNext.setEnabled(false);
            btnPrevious.setEnabled(false);
            txtQuestion.setEnabled(false);
            txtOption1.setEnabled(false);
            txtOption2.setEnabled(false);
            txtOption3.setEnabled(false);
            txtOption4.setEnabled(false);
            jcCorrectOption.setEnabled(false);
            //pos--;
            return;
        }
        showQuestions();
            /*    qno++;
        if(qno>qStore.getCount())
            qno=1;*/
        //lblQno.setText("Question no:"+qno);
        



      /*  if(pos <= editExam.getTotalQuestions() - 1)
        {
            
            showQuestions();
            lblQno.setText("Question no "+ ++qno);
        }
        else
        {
            String str = "All questions have been edited.Do you want to add questions to the database? \n Click DONE if YES";
            int ans = JOptionPane.showConfirmDialog(null,str,"Questions Exhausted!!",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if(ans == JOptionPane.YES_OPTION)
                btnNext.setEnabled(false);
        }
        
        */
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        if(pos <= editExam.getTotalQuestions() - 1)
        {
             String str = "All questions have not been edited.Do you still want to add questions to the database? \n Click DONE if YES";
             int ans = JOptionPane.showConfirmDialog(null,str,"Questions Exhausted!!",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
             if(ans == JOptionPane.YES_OPTION)
                 addEditedQuestions();
            /* {
                 
           ArrayList<Questions> questions = qStore.getAllQuestions();
           for(Questions q: questions )
        {
            String que = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",q.getQuesNo(),q.getExamID(),q.getLanguage(),q.getQuestion(),
                                q.getAnswer1(),q.getAnswer2(),q.getAnswer3(),q.getAnswer4(),"correctAnswer: ",q.getCorrectAnswer());
            System.out.println(que);
        }
       }*/
                 }
        
        else
        addEditedQuestions();
       /* {
            ArrayList<Questions> questions = qStore.getAllQuestions();
            for(Questions q: questions )
        {
            String que = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",q.getQuesNo(),q.getExamID(),q.getLanguage(),q.getQuestion(),
                         q.getAnswer1(),q.getAnswer2(),q.getAnswer3(),q.getAnswer4(),"correctAnswer: ",q.getCorrectAnswer());
            System.out.println(que);
        }
       
      
        }*/
        
        
            
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
       
        if(pos<=0)
            return;
        pos--;
        qno--;
        showQuestions();
        // Questions ques = createQuestion();    //not needed here ..... it is required in next
        //String test = String.format("%s%d\t%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s%s\n","Ques no: ",ques.getQuesNo(),ques.getExamID(),ques.getLanguage(),ques.getQuestion(),
        //  ques.getAnswer1(),ques.getAnswer2(),ques.getAnswer3(),ques.getAnswer4(),"correctAnswer: ",ques.getCorrectAnswer());
        // System.out.println("At position: " + pos);        
        // System.out.println(test);
        
        //System.out.println(obj);
        // qStore.removeQuestion(pos);
        // qStore.setQuestionAt(pos,obj);
        // pos--;
        
        // {
        //  / JOptionPane.showMessageDialog(null, "Your question set has been successfully updated.\nPress the DONE button to send it to the database ","Exam Added!",JOptionPane.INFORMATION_MESSAGE);
        // pos=qStore.getCount()-1;
        //}
        
        
       // qno--;
       // if(qno<=0)
         //   qno=qStore.getCount();
        //lblQno.setText("Question no:"+qno);
         


    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
            
            AdminOptionsFrame adminFrame=new AdminOptionsFrame();
            adminFrame.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditQuestionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcCorrectOption;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtOption1;
    private javax.swing.JTextField txtOption2;
    private javax.swing.JTextField txtOption3;
    private javax.swing.JTextField txtOption4;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

    private void loadQuestions() throws SQLException 
    {
       try
       {
           ArrayList<Questions> questionList = QuestionDAO.getQuestionByExam(editExam.getExamID());
           for(Questions ques : questionList)
            {
                qStore.addQuestion(ques);
            }
       }
       
      catch(SQLException ex)
      {
            JOptionPane.showMessageDialog(null, "Error while connecting to DB!","Exception!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
      }

    }

    private void showQuestions() 
    {
            Questions ques = qStore.getQuestion(pos);
            txtQuestion.setText(ques.getQuestion());
            txtOption1.setText(ques.getAnswer1());
            txtOption2.setText(ques.getAnswer2());
            txtOption3.setText(ques.getAnswer3());
            txtOption4.setText(ques.getAnswer4());
            
            String correctAnswer = ques.getCorrectAnswer();
            correctOption = getKeyFromValues(correctAnswer);
            jcCorrectOption.setSelectedItem(correctOption);
            
            lblQno.setText("Question no:"+qno);
    }
    

public String getKeyFromValues(String value)
{
	Set<String>keys = options.keySet();                                                         // options is HashMap
	for(String key : keys)
	{
            String currValue = options.get(key);
	    if(currValue.equals(value))
            {
		return key;
            }
	}
            return null;
}

    private Questions createQuestion() 
    {
            question = txtQuestion.getText();
            option1 = txtOption1.getText();
            option2 = txtOption2.getText();
            option3 = txtOption3.getText();
            option4 = txtOption4.getText(); 
            String optionName = options.get(correctOption);
            
            Questions ques = new Questions( editExam.getExamID(), question, editExam.getLanguage(), option1,option2, option3, option4,optionName , qno);
            qno++;
            return ques;
    }
    
    private void addEditedQuestions()
    {
        try
        {  
            QuestionDAO.updateQuestions(qStore);
            JOptionPane.showMessageDialog(null,"All questions successfully added to database","Added!!",JOptionPane.INFORMATION_MESSAGE);
            EditPaperFrame editPaper=new EditPaperFrame();
            editPaper.setVisible(true);
            this.dispose();
                     
        }  
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null,"SQL Error!!","Error!!",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
    
 public  boolean validateInput()
{
    question = txtQuestion.getText().trim();
    option1 = txtOption1.getText().trim();
    option2 = txtOption2.getText().trim();
    option3 = txtOption3.getText().trim();
    option4 = txtOption4.getText().trim();
    correctOption = jcCorrectOption.getSelectedItem().toString();
    
    return !(question.isEmpty() || option1.isEmpty() || option2.isEmpty() || option3.isEmpty() || option4.isEmpty());
}

}
